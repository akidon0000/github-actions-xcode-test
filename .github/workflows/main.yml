name: CI

on: [push]

# 動作バージョンの指定
env:
 DEVELOPER_DIR: /Applications/Xcode_15.0.app

jobs:
  build:
    name: build for ${{ matrix.environment }}
    runs-on: macos-13
    strategy:
      fail-fast: false
      matrix:
        environment: ["main"]

    steps:
    # チェックアウト
    - uses: actions/checkout@v3

    # Xcodeの一覧出力
    - name: Show Xcode list
      run: ls /Applications | grep 'Xcode'

    # Xcodeのバージョン出力
    - name: Show Xcode version
      run: xcodebuild -version

    # Gemsのインストール
#    - name: Install Bundled Gems
#      run: |
#        bundle config path vendor/bundle
#        bundle install --jobs 4 --retry 3
#    # CocoaPodsで管理しているライブラリのキャッシュ
#    - name: Cache Pods
#      uses: actions/cache@v2
#      with:
#        path: Pods
#        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
#        restore-keys: |
#          ${{ runner.os }}-pods-

    # CocoaPodsをインストールする
    - name: CocoaPods
      run: pod install

    # ビルド
    - name: Xcode build
      run: set -o pipefail &&
        xcodebuild
        -sdk iphonesimulator
        -configuration Debug
        -workspace github-actions-xcode-test.xcworkspace
        -scheme github-actions-xcode-test
        build
        | bundle exec xcpretty

    # 単体テストの実行
    - name: Xcode test
      run: set -o pipefail &&
        xcodebuild
        -sdk iphonesimulator
        -configuration Debug
        -workspace github-actions-xcode-test.xcworkspace
        -scheme github-actions-xcode-test
        -destination 'platform=iOS Simulator,name=iPhone 15 Pro Max'
        -skip-testing:github-actions-xcode-testUITests
        clean test


#    # シミュレーター向けにビルド
#    # set -o pipefail (エラー発生時終了)
#    # bundle exec xcpretty --report html (エラー文を整形)
#    - name: Xcode UnitTest
#      run: set -o pipefail &&
#          xcodebuild
#          -sdk iphonesimulator
#          -configuration Debug
#          -workspace univIP.xcworkspace
#          -scheme univIP
#          -destination 'platform=iOS Simulator,name=iPhone 15 Pro Max'
#          -skip-testing:univIPUITests
#          clean test
#        | bundle exec xcpretty --report html

    # セットアップ
#    - name: Install Command Line Tools for Xcode
#    run: sudo xcode-select -s /Library/Developer/CommandLineTools
#    shell: bash

#    # ビルド
#    - name: Xcode build for ${{ matrix.environment }}
#      run: |
#        make build-debug-${{ matrix.environment }}
#
#    # ビルドログのアップロード
#    - name: Upload build log Artifact
#      uses: actions/upload-artifact@v3
#      if: failure()
#      with:
#        name: xcodebuild-logs
#        path: |
#          Reports/*_Build.log
#        if-no-files-found: ignore
#        retention-days: 14

#  test:
#    name: test for ${{ matrix.name }}
#    runs-on: macos-13
#    strategy:
#      fail-fast: false
#      matrix:
#        name: ["develop", "production", "app-module"]
#
#    steps:
#    # チェックアウト
#    - uses: actions/checkout@v3
#
#    # セットアップ
#    - uses: ./.github/workflows/templates/setup-ios
#
#    # モックの生成
#    - name: Generate mocks with Mockolo
#      run: make generate-mocks
#
#    # 単体テストの実行
#    - name: Xcode test
#      run: |
#        make test-debug-${{ matrix.name }}
#
#    # テスト結果のアップロード
#    - name: Upload test results Artifact
#      uses: actions/upload-artifact@v3
#      if: success() || failure()
#      with:
#        name: test-results
#        path: |
#          Reports/*.xcresult
#        if-no-files-found: error
#        retention-days: 14
#
#    # 単体テストログのアップロード
#    - name: Upload test log Artifact
#      uses: actions/upload-artifact@v3
#      if: failure()
#      with:
#        name: xcodebuild-logs
#        path: |
#          Reports/*_Test.log
#        if-no-files-found: ignore
#        retention-days: 14
#
#  show-test-results:
#    runs-on: macos-13
#    permissions:
#      checks: write
#    needs: test
#
#    steps:
#    # チェックアウト
#    - uses: actions/checkout@v3
#
#    # テスト結果のダウンロード
#    - name: Download test results artifact
#      uses: actions/download-artifact@v3
#      with:
#        name: test-results
#        path: Reports
#
#    # テスト結果のマージ
#    - name: Merge test results
#      run: make merge-test-results
#
#    # テスト結果の表示とアップロード
#    - uses: kishikawakatsumi/xcresulttool@v1
#      if: success() || failure()
#      with:
#        path: Reports/TestResults.xcresult
#
#  info:
#    runs-on: macos-13
#
#    steps:
#    # チェックアウト
#    - uses: actions/checkout@v3
#
#    # 情報の出力
#    - uses: ./.github/workflows/templates/output-info
